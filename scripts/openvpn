#!/usr/bin/env node

var fs = require('fs');
var mv = require('mv');
var zlib = require('zlib');
var path = require('path');

var request = null;
request = require('../lib/request');

var tar = require('tar');
var temp = require('temp');

temp.track();

// OpenVPN Download Link
var config = {
	win: {
		x86: '',
		x64: '',
	}
}

var downloadFileToLocation = function (url, filename, callback) {
	var stream = fs.createWriteStream(filename);
	stream.on('end', callback);
	stream.on('error', callback);
	request.createReadStream({
		url: url
	}, function (requestStream) {
		requestStream.pipe(stream);
	});
};

var downloadTarballAndExtract = function (url, location, callback) {
	var tempPath = temp.mkdirSync('vpnht-openvpn-');
	var stream = tar.Extract({
		path: tempPath
	});
	stream.on('end', callback.bind(this, tempPath));
	stream.on('error', callback);
	request.createReadStream({
		url: url
	}, function (requestStream) {
		requestStream.pipe(zlib.createGunzip()).pipe(stream);
	});
};

var copyToLocation = function (callback, version, targetFilename, fromDirectory) {
	var arch = process.arch === 'ia32' ? 'x86' : process.arch;
	var subDir = "node-" + version + "-" + process.platform + "-" + arch;
	var fromPath = path.join(fromDirectory, subDir, 'bin', 'node');
	return mv(fromPath, targetFilename, function (err) {
		if (err) {
			callback(err);
			return;
		}
		fs.chmod(targetFilename, "755", callback);
	});
};

var downloadOpenVPN = function (version, done) {
	var arch, downloadURL, filename;
	arch = process.arch === 'ia32' ? 'x86' : process.arch;

	if (process.platform === 'win32') {
		downloadURL = "http://nodejs.org/dist/" + version + "/" + arch + "node.exe";
		filename = path.join('bin', "openvpn.exe");
	} else {
		downloadURL = "http://nodejs.org/dist/" + version + "/node-" + version + "-" + process.platform + "-" + arch + ".tar.gz";
		filename = path.join('bin', "openvpn");
	}

	var downloadFile = function () {
		// it's a EXE
		if (process.platform === 'win32') {
			downloadFileToLocation(downloadURL, filename, done);
		} else if (process.platform === 'linux') {
			var next = copyToLocation.bind(this, done, version, filename);
			downloadTarballAndExtract(downloadURL, filename, next);
		} else {
			var next = copyToLocation.bind(this, done, version, filename);
			downloadTarballAndExtract(downloadURL, filename, next);
		}
	};

	downloadFile();
};

downloadOpenVPN('v0.10.33', function (error) {
	if (error != null) {
		console.error('Failed to download node', error);
		return process.exit(1);
	} else {
		return process.exit(0);
	}
});
